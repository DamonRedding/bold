{"version":3,"sources":["webpack:///./src/pages/design-guidelines/iconography/library.mdx","webpack:///./src/components/IconLibrary.tsx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent","IconLibrary","classes","useStyles","createStyles","useState","filter","setFilter","icons","matchSorter","Object","keys","IconMap","className","searchWrapper","icon","placeholder","value","onChange","e","target","wrap","map","key","style","cell","iconBox","wordWrap","theme","width","display","alignItems","justifyContent","background","pallete","surface","padding","height","margin","border","divider","textAlign","fontSize","typography","sizes","text"],"mappings":"8RAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAaA,QAAQ,iBAKzBH,EAAWI,gBAAiB,G,yKC1BfC,EAAc,WAAM,IACvBC,EAAYC,aAAUC,GAAtBF,QADuB,EAEHG,mBAAS,IAA9BC,EAFwB,KAEhBC,EAFgB,KAYzBC,EAAQC,YAAYC,OAAOC,KAAKC,KAAUN,GAEhD,OACE,kBAAC,IAAD,KACE,yBAAKO,UAAWX,EAAQY,eACtB,kBAAC,IAAD,CAAWC,KAAK,cAAcC,YAAY,kBAAkBC,MAAOX,EAAQY,SAbtD,SAACC,GACtBA,GAAKA,EAAEC,QAAUD,EAAEC,OAAOH,MAC5BV,EAAUY,EAAEC,OAAOH,OAEnBV,EAAU,QAYV,kBAAC,IAAD,CAAMc,MAAI,GACPb,EAAMc,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAMA,IAAKA,EAAKC,MAAOtB,EAAQuB,MAC7B,yBAAKZ,UAAWX,EAAQwB,SACtB,kBAAC,IAAD,CAAMX,KAAMQ,KAEd,kBAAC,IAAD,CAAMC,MAAO,CAAEG,SAAU,eAAiBJ,UAQhDnB,EAAe,SAACwB,GAAD,MAAmB,CACtCd,cAAe,CACbe,MAAO,KAETH,QAAS,CACPI,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,WAAYL,EAAMM,QAAQC,QAAQF,WAClCG,QAAS,OACTC,OAAQ,GACRR,MAAO,GACPS,OAAQ,qBACRC,OAAQ,aAAaX,EAAMM,QAAQM,SAErCf,KAAM,CACJI,MAAO,IACPY,UAAW,SACXC,SAAUd,EAAMe,WAAWC,MAAMC","file":"component---src-pages-design-guidelines-iconography-library-mdx-d92ad9456e3247705c52.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/bonetti/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nimport { IconLibrary } from '../../../components/IconLibrary';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <IconLibrary mdxType=\"IconLibrary\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { Cell, Grid, Icon, Text, TextInput, Theme, useStyles, VFlow } from 'bold-ui'\nimport { IconMap } from 'bold-ui/components/Icon/generated/Icons'\nimport matchSorter from 'match-sorter'\nimport React, { useState } from 'react'\n\nexport const IconLibrary = () => {\n  const { classes } = useStyles(createStyles)\n  const [filter, setFilter] = useState('')\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e && e.target && e.target.value) {\n      setFilter(e.target.value)\n    } else {\n      setFilter('')\n    }\n  }\n\n  const icons = matchSorter(Object.keys(IconMap), filter)\n\n  return (\n    <VFlow>\n      <div className={classes.searchWrapper}>\n        <TextInput icon='zoomOutline' placeholder='Search icons...' value={filter} onChange={handleSearchChange} />\n      </div>\n\n      <Grid wrap>\n        {icons.map((key: any) => (\n          <Cell key={key} style={classes.cell}>\n            <div className={classes.iconBox}>\n              <Icon icon={key} />\n            </div>\n            <Text style={{ wordWrap: 'break-word' }}>{key}</Text>\n          </Cell>\n        ))}\n      </Grid>\n    </VFlow>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  searchWrapper: {\n    width: 320,\n  },\n  iconBox: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: theme.pallete.surface.background,\n    padding: '1rem',\n    height: 80,\n    width: 80,\n    margin: '0 auto 0.5rem auto',\n    border: `1px solid ${theme.pallete.divider}`,\n  } as React.CSSProperties,\n  cell: {\n    width: 100,\n    textAlign: 'center',\n    fontSize: theme.typography.sizes.text,\n  } as React.CSSProperties,\n})\n"],"sourceRoot":""}