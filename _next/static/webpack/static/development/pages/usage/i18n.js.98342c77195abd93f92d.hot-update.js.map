{"version":3,"file":"static/webpack/static/development/pages/usage/i18n.js.98342c77195abd93f92d.hot-update.js","sources":["webpack:///./pages/usage/i18n/index.mdx"],"sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Demo } from '../../../components/Demo'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"internationalization-i18n\"\n    }}>{`Internationalization (i18n)`}</h1>\n    <p>{`The components use the user browser language to determine the locale.`}</p>\n    <p>{`You can customize the strings used by the components using the `}<inlineCode parentName=\"p\">{`LocaleContent.Provider`}</inlineCode>{` component and access them using the `}<inlineCode parentName=\"p\">{`useLocale`}</inlineCode>{` hook.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useLocale`}</inlineCode>{` hook returns a map of strings used internally by some bold components, like Calendar, Paginator etc.`}</p>\n    <Demo src='pages/usage/i18n/LocaleProvider' mdxType=\"Demo\" />\n    <h2 {...{\n      \"id\": \"available-locales\"\n    }}>{`Available locales`}</h2>\n    <p>{`Check the available locales on the `}<inlineCode parentName=\"p\">{`src/i18n/locales`}</inlineCode>{` folder. Feel free to open a pull request if your locale is not there yet.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAIA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;A","sourceRoot":""}