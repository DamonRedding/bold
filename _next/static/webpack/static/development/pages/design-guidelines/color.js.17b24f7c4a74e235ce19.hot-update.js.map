{"version":3,"file":"static/webpack/static/development/pages/design-guidelines/color.js.17b24f7c4a74e235ce19.hot-update.js","sources":["webpack:///./components/Pallete.tsx"],"sourcesContent":["import { Theme, useStyles } from '../../lib'\nimport { ColorScale, gray } from '../../lib/styles/colors'\n\nexport interface PalletePros {\n  title: string\n  pallete: ColorScale\n}\n\nexport function Pallete(props: PalletePros) {\n  const { title, pallete } = props\n  const { classes, css } = useStyles(createStyles)\n\n  const keys: number[] = Object.keys(pallete)\n    .map(k => parseInt(k.substr(1), 10))\n    .sort((a, b) => (a < b ? 1 : -1))\n\n  return (\n    <div className={classes.box}>\n      <div className={css(classes.item, classes.title)} style={{ background: pallete.c40, color: gray.c100 }}>\n        {title}\n      </div>\n      <div className={classes.item} style={{ background: pallete.c40, color: gray.c100 }}>\n        <span className={classes.shade}>40</span>\n        <span className={classes.hex}>{pallete.c40}</span>\n      </div>\n      {keys.map(key => (\n        <div\n          key={key}\n          className={classes.item}\n          style={{\n            background: (pallete as any)['c' + key],\n            color: key <= 60 ? gray.c100 : gray.c20,\n          }}\n        >\n          <span className={classes.shade}>{key}</span>\n          <span className={classes.hex}>{(pallete as any)['c' + key]}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  box: {\n    display: 'inline-block',\n    width: 240,\n    fontSize: theme.typography.sizes.text,\n  } as React.CSSProperties,\n  title: {\n    fontWeight: 'bold',\n  } as React.CSSProperties,\n  item: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '0.75rem 1rem',\n    '&:first-of-type': {\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n    '&:last-of-type': {\n      borderBottomLeftRadius: 4,\n      borderBottomRightRadius: 4,\n    },\n  } as React.CSSProperties,\n  shade: {\n    fontWeight: 'bold',\n  } as React.CSSProperties,\n  hex: {} as React.CSSProperties,\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAeA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AAaA;AACA;AADA;AAGA;AAzBA;AAAA;;;;A","sourceRoot":""}