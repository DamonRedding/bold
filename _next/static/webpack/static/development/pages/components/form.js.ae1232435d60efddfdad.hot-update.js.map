{"version":3,"file":"static/webpack/static/development/pages/components/form.js.ae1232435d60efddfdad.hot-update.js","sources":["webpack:///./pages/components/form/Form.demo.tsx?e1a6","webpack:///./pages/components/form/Form.demo.tsx"],"sourcesContent":["export default \"import { FormRenderProps } from 'react-final-form'\\n\\nimport { Button, Cell, CheckboxField, Form, FormControl, Grid, HFlow, RadioField, TextField } from '../../../../lib'\\n\\nfunction FormDemo() {\\n  const renderForm = (formProps: FormRenderProps) => {\\n    return (\\n      <form onSubmit={formProps.handleSubmit}>\\n        <Grid wrap>\\n          <Cell xs={6}>\\n            <TextField label='First name' name='firstName' required />\\n          </Cell>\\n          <Cell xs={6}>\\n            <TextField label='Last name' name='lastName' required />\\n          </Cell>\\n          <Cell xs={6}>\\n            <TextField name='email' label='E-email' type='email' icon='emailFilled' />\\n          </Cell>\\n          <Cell xs={6}>\\n            <FormControl label='Favorite color'>\\n              <HFlow>\\n                <RadioField name='color' value='red' label='Red' />\\n                <RadioField name='color' value='green' label='Green' />\\n                <RadioField name='color' value='blue' label='Blue' />\\n              </HFlow>\\n            </FormControl>\\n          </Cell>\\n          <Cell xs={12}>\\n            <CheckboxField name='agreed' label='I agree to the terms of use' />\\n          </Cell>\\n          <Cell xs={12}>\\n            <HFlow justifyContent='flex-end'>\\n              <Button type='reset' skin='ghost' onClick={formProps.reset}>\\n                Reset\\n              </Button>\\n              <Button type='submit' kind='primary' onClick={formProps.handleSubmit}>\\n                Submit\\n              </Button>\\n            </HFlow>\\n          </Cell>\\n        </Grid>\\n      </form>\\n    )\\n  }\\n\\n  return <Form render={renderForm} onSubmit={console.log} validate={validate} />\\n}\\n\\nconst validate = (values: any) => {\\n  const errors: any = {}\\n\\n  if (!values.firstName) {\\n    errors.firstName = 'First name is required'\\n  }\\n\\n  if (!values.lastName) {\\n    errors.lastName = 'Last name is required'\\n  }\\n\\n  return errors\\n}\\n\\nexport default FormDemo\\n\"","import { FormRenderProps } from 'react-final-form'\n\nimport { Button, Cell, CheckboxField, Form, FormControl, Grid, HFlow, RadioField, TextField } from '../../../../lib'\n\nfunction FormDemo() {\n  const renderForm = (formProps: FormRenderProps) => {\n    return (\n      <form onSubmit={formProps.handleSubmit}>\n        <Grid wrap>\n          <Cell xs={6}>\n            <TextField label='First name' name='firstName' required />\n          </Cell>\n          <Cell xs={6}>\n            <TextField label='Last name' name='lastName' required />\n          </Cell>\n          <Cell xs={6}>\n            <TextField name='email' label='E-email' type='email' icon='emailFilled' />\n          </Cell>\n          <Cell xs={6}>\n            <FormControl label='Favorite color'>\n              <HFlow>\n                <RadioField name='color' value='red' label='Red' />\n                <RadioField name='color' value='green' label='Green' />\n                <RadioField name='color' value='blue' label='Blue' />\n              </HFlow>\n            </FormControl>\n          </Cell>\n          <Cell xs={12}>\n            <CheckboxField name='agreed' label='I agree to the terms of use' />\n          </Cell>\n          <Cell xs={12}>\n            <HFlow justifyContent='flex-end'>\n              <Button type='reset' skin='ghost' onClick={formProps.reset}>\n                Reset\n              </Button>\n              <Button type='submit' kind='primary' onClick={formProps.handleSubmit}>\n                Submit\n              </Button>\n            </HFlow>\n          </Cell>\n        </Grid>\n      </form>\n    )\n  }\n\n  return <Form render={renderForm} onSubmit={console.log} validate={validate} />\n}\n\nconst validate = (values: any) => {\n  const errors: any = {}\n\n  if (!values.firstName) {\n    errors.firstName = 'First name is required'\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Last name is required'\n  }\n\n  return errors\n}\n\nexport default FormDemo\n"],"mappings":";;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}