{"version":3,"file":"static/webpack/static/development/pages/components/toast.js.32b930c54bd43f506ee9.hot-update.js","sources":["webpack:///./pages/components/toast.mdx"],"sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Use toast to show information that requires minimal user interaction. Show these event-driven messages by overlaying the message at the bottom left of the screen, as if it was emerging from the navigation sidebar. Toasts can close automatically after 5 seconds, or they may require manual close action.`}</p>\n    <h2 {...{\n      \"id\": \"best-practices\"\n    }}>{`Best practices`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Try to keep the text of message concise: it can be up to two lines in length.`}</li>\n      <li parentName=\"ul\">{`Use dismiss icon to close flags.`}</li>\n      <li parentName=\"ul\">{`The flag must close after an action is taken, or after 5 seconds. If the flag receives hover status, it should be kept open.`}</li>\n      <li parentName=\"ul\">{`Use a maximum of two links that allow users to respond to the flag's content.`}</li>\n      <li parentName=\"ul\">{`Informative icons can be used to make the message clear.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`This component hasn't yet been implemented as a react component.`}</strong></p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAIA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;A","sourceRoot":""}