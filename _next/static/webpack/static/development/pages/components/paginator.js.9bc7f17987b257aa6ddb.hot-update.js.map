{"version":3,"file":"static/webpack/static/development/pages/components/paginator.js.9bc7f17987b257aa6ddb.hot-update.js","sources":["webpack:///./pages/components/table/DataTable.demo.tsx?9549","webpack:///./pages/components/table/DataTable.demo.tsx"],"sourcesContent":["export default \"import { useState } from 'react'\\n\\nimport { Button, DataTable, Icon } from '../../../../lib'\\n\\ninterface RowType {\\n  id: number\\n  name: string\\n  age: number\\n}\\n\\nfunction DataTableExample() {\\n  const [sort, setSort] = useState(['id'])\\n\\n  const rows = allRows\\n    // Naive sorting for example purposes:\\n    .sort((a, b) => {\\n      if (sort[0] === 'id') {\\n        return a.id - b.id\\n      }\\n      if (sort[0] === '-id') {\\n        return b.id - a.id\\n      }\\n      return 0\\n    })\\n\\n  return (\\n    <DataTable<RowType>\\n      rows={rows}\\n      sort={sort}\\n      onSortChange={setSort}\\n      loading={false}\\n      columns={[\\n        {\\n          name: 'id',\\n          header: 'ID',\\n          sortable: true,\\n          render: item => item.id,\\n        },\\n        {\\n          name: 'name',\\n          header: 'Name',\\n          render: item => item.name,\\n        },\\n        {\\n          name: 'age',\\n          header: 'Age',\\n          render: item => item.age,\\n        },\\n        {\\n          name: 'actions',\\n          render: item => (\\n            <Button size='small' skin='ghost'>\\n              <Icon icon='penOutline' />\\n            </Button>\\n          ),\\n          style: { textAlign: 'right' },\\n        },\\n      ]}\\n    />\\n  )\\n}\\n\\nexport default DataTableExample\\n\\n// Fake data to populate table\\nlet id = 1\\nconst allRows: RowType[] = Array(6)\\n  .fill(true)\\n  .reduce(\\n    curr => [\\n      ...curr,\\n      { id: id++, name: 'MARIA MACHADO DE JESUS', age: 42 },\\n      { id: id++, name: 'JOSÉ DA SILVA MOREIRA', age: 34 },\\n      { id: id++, name: 'ALICE BARBOSA', age: 27 },\\n    ],\\n    [] as RowType[]\\n  )\\n\"","import { useState } from 'react'\n\nimport { Button, DataTable, Icon } from '../../../../lib'\n\ninterface RowType {\n  id: number\n  name: string\n  age: number\n}\n\nfunction DataTableExample() {\n  const [sort, setSort] = useState(['id'])\n\n  const rows = allRows\n    // Naive sorting for example purposes:\n    .sort((a, b) => {\n      if (sort[0] === 'id') {\n        return a.id - b.id\n      }\n      if (sort[0] === '-id') {\n        return b.id - a.id\n      }\n      return 0\n    })\n\n  return (\n    <DataTable<RowType>\n      rows={rows}\n      sort={sort}\n      onSortChange={setSort}\n      loading={false}\n      columns={[\n        {\n          name: 'id',\n          header: 'ID',\n          sortable: true,\n          render: item => item.id,\n        },\n        {\n          name: 'name',\n          header: 'Name',\n          render: item => item.name,\n        },\n        {\n          name: 'age',\n          header: 'Age',\n          render: item => item.age,\n        },\n        {\n          name: 'actions',\n          render: item => (\n            <Button size='small' skin='ghost'>\n              <Icon icon='penOutline' />\n            </Button>\n          ),\n          style: { textAlign: 'right' },\n        },\n      ]}\n    />\n  )\n}\n\nexport default DataTableExample\n\n// Fake data to populate table\nlet id = 1\nconst allRows: RowType[] = Array(6)\n  .fill(true)\n  .reduce(\n    curr => [\n      ...curr,\n      { id: id++, name: 'MARIA MACHADO DE JESUS', age: 42 },\n      { id: id++, name: 'JOSÉ DA SILVA MOREIRA', age: 34 },\n      { id: id++, name: 'ALICE BARBOSA', age: 27 },\n    ],\n    [] as RowType[]\n  )\n"],"mappings":";;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AAPA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;;;;A","sourceRoot":""}