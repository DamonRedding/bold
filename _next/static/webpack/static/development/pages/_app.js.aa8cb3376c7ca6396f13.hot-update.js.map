{"version":3,"file":"static/webpack/static/development/pages/_app.js.aa8cb3376c7ca6396f13.hot-update.js","sources":["webpack:///./components/AppHeader.tsx"],"sourcesContent":["import NextLink from 'next/link'\n\nimport { Button, Icon, lightTheme, Link, TextInput, Theme, Tooltip, useStyles } from '../../lib'\n\nimport { BoldLogo } from './BoldLogo'\nimport { SIDE_NAV_WIDTH } from './SideNav'\nimport { useThemeSwitch } from './useThemeSwitch'\n\nexport interface AppHeaderProps {}\n\nexport function AppHeader(props: AppHeaderProps) {\n  const [currentTheme, switchTheme] = useThemeSwitch()\n  const { classes } = useStyles(createStyles)\n\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>\n        <NextLink href='/'>\n          <Link href='/' style={{ display: 'inline-block' }}>\n            <BoldLogo aria-label='Bold Logo' style={{ height: '2.5rem' }} />\n          </Link>\n        </NextLink>\n      </div>\n\n      <div className={classes.search} id='search-wrapper'>\n        <TextInput\n          id='search-input'\n          style={classes.searchInput}\n          type='search'\n          icon='zoomOutline'\n          iconPosition='left'\n          placeholder='Search in bold design system...'\n        />\n      </div>\n\n      <div>\n        <Tooltip text={currentTheme === lightTheme ? 'Switch to dark mode' : 'Switch to light mode'}>\n          <Button skin='ghost' size='small' onClick={onThemeSwitch}>\n            <Icon icon='lightbulbFilled' />\n          </Button>\n        </Tooltip>\n      </div>\n    </header>\n  )\n}\n\nexport const APP_HEADER_HEIGHT = 77\n\nconst createStyles = (theme: Theme) => ({\n  header: {\n    background: theme.pallete.surface.main,\n    padding: '1rem 2rem',\n    boxShadow: theme.shadows.outer[60],\n    display: 'flex',\n    alignItems: 'center',\n    zIndex: 20,\n    position: 'fixed',\n    width: '100%',\n  } as React.CSSProperties,\n  logo: {\n    borderRight: `1px solid ${theme.pallete.divider}`,\n    width: `calc(${SIDE_NAV_WIDTH}px - 2rem)`,\n    padding: '0 1rem 0 2.75rem',\n  } as React.CSSProperties,\n  searchInput: {\n    border: 'none',\n    '~ span': {\n      background: theme.pallete.surface.main,\n    },\n    '&::-webkit-search-decoration': {\n      WebkitAppearance: 'none',\n    } as React.CSSProperties,\n  } as React.CSSProperties,\n  search: {\n    flex: 1,\n    padding: '0 1rem',\n    position: 'relative',\n\n    '.algolia-autocomplete [class^=\"ds-dataset\"]': {\n      background: theme.pallete.surface.main,\n      borderColor: theme.pallete.divider,\n      '&::before': {\n        background: theme.pallete.surface.main,\n      },\n    },\n\n    '.algolia-autocomplete': {\n      left: '1rem !important',\n      top: '0.5rem',\n    },\n\n    /* Main dropdown wrapper */\n    '.algolia-autocomplete .ds-dropdown-menu': {\n      fontSize: '1em',\n      fontWeight: 'normal',\n      '&::before': {\n        background: theme.pallete.surface.main,\n      },\n    },\n\n    /* Link element */\n    '.algolia-autocomplete .algolia-docsearch-suggestion': {\n      fontWeight: 'normal',\n      textDecoration: 'none',\n      background: 'transparent',\n    },\n\n    /* Main category (eg. Getting Started) */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--category-header': {\n      fontWeight: 'bold',\n      color: theme.pallete.text.main,\n    },\n\n    /* Category (eg. Downloads) */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--subcategory-column': {},\n\n    '.algolia-autocomplete .algolia-docsearch-suggestion--subcategory-column-text': {\n      color: theme.pallete.text.secondary,\n      fontSize: theme.typography.sizes.text,\n    },\n\n    /* Content */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--content': {},\n\n    /* Title (eg. Bootstrap CDN) */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--title': {\n      color: theme.pallete.text.main,\n      fontSize: theme.typography.sizes.text,\n    },\n\n    /* Description description (eg. Bootstrap currently works...) */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--text': {\n      color: theme.pallete.text.main,\n      fontSize: theme.typography.sizes.text,\n    },\n\n    /* Highlighted text */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--highlight': {\n      color: 'inherit !important',\n      background: `${theme.pallete.highlight} !important`,\n      boxShadow: 'none !important',\n    },\n  } as React.CSSProperties,\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AACA;AAOA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAhEA;AAzBA;AAAA;;;;A","sourceRoot":""}