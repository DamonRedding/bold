{"version":3,"file":"static/webpack/static/development/pages/_app.js.090e66b94a85b67a04dc.hot-update.js","sources":["webpack:///./components/SideNav/SideNav.tsx"],"sourcesContent":["import React, { useRef } from 'react'\n\nimport { Icons, Omit, Theme, useStyles } from '../../../lib'\nimport { useClickOutside } from '../../../lib/hooks/useClickOutside'\nimport { TransitionState, useTransition } from '../../../lib/hooks/useTransition'\nimport { APP_HEADER_HEIGHT } from '../AppHeader'\n\nimport { SideNavItem } from './SideNavItem'\n\nexport interface PageLink {\n  href?: string\n  title: React.ReactNode\n  icon: Icons | string\n  children?: Array<Omit<PageLink, 'icon' | 'children'>>\n}\n\nexport interface SideNavProps {\n  pages: PageLink[]\n  open: boolean\n  onChangeOpen(open: boolean): void\n}\n\nexport function SideNav(props: SideNavProps) {\n  const { pages, open, onChangeOpen } = props\n\n  const { classes } = useStyles(createStyles, props)\n\n  const wrapperRef = useRef<HTMLDivElement>(null)\n  useClickOutside(wrapperRef, () => onChangeOpen(false))\n  const handleNavigate = () => onChangeOpen(false)\n\n  return (\n    <div ref={wrapperRef} className={classes.wrapper}>\n      <nav className={classes.nav}>\n        <ul className={classes.ul}>\n          {pages.map(link => (\n            <SideNavItem key={link.href} onNavigate={handleNavigate} {...link} />\n          ))}\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport const SIDE_NAV_WIDTH = 288\n\nconst createStyles = (theme: Theme, { open }: SideNavProps) => ({\n  wrapper: {\n    width: SIDE_NAV_WIDTH,\n    flexShrink: 0,\n    transition: 'all .2s ease',\n\n    [theme.breakpoints.down('md')]: {\n      display: !open && 'none',\n      position: 'fixed',\n      zIndex: 10,\n      left: open ? 0 : -SIDE_NAV_WIDTH,\n    },\n  } as React.CSSProperties,\n  nav: {\n    background: theme.pallete.surface.main,\n    width: SIDE_NAV_WIDTH,\n    borderRight: `1px solid ${theme.pallete.divider}`,\n    boxShadow: theme.shadows.outer[40],\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '2rem 0',\n    marginTop: APP_HEADER_HEIGHT,\n    position: 'fixed',\n    zIndex: 10,\n    overflow: 'auto',\n    height: `calc(100vh - ${APP_HEADER_HEIGHT}px)`,\n    svg: {\n      fill: 'currentColor',\n    },\n  } as React.CSSProperties,\n  ul: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n  } as React.CSSProperties,\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAEA;AAeA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAbA;AAiBA;AACA;AACA;AACA;AAHA;AA9BA;AAAA;;;;A","sourceRoot":""}