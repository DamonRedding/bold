{"version":3,"file":"static/webpack/static/development/pages/_app.js.ca2454b3bdd46390b959.hot-update.js","sources":["webpack:///./components/AppHeader.tsx"],"sourcesContent":["import NextLink from 'next/link'\n\nimport { Button, Icon, lightTheme, Link, TextInput, Theme, Tooltip, useStyles } from '../../lib'\n\nimport { BoldLogo } from './BoldLogo'\nimport { SIDE_NAV_WIDTH } from './SideNav'\n\ninterface AppHeaderProps {\n  navOpen: boolean\n  switchTheme(): void\n  onNavChange(open: boolean): void\n}\n\nconst t = p => p\n\nexport function AppHeader(props: AppHeaderProps) {\n  const { navOpen, onNavChange, switchTheme } = props\n  const { classes, theme } = useStyles(createStyles)\n\n  const changeNavState = (open: boolean) => () => onNavChange(open)\n\n  return (\n    <header className={classes.header}>\n      <div className={classes.menuIcon}>\n        <Button\n          skin='ghost'\n          size='small'\n          onClick={changeNavState(!navOpen)}\n          aria-label={navOpen ? t('menu-open') : t('menu-close')}\n        >\n          {!navOpen ? <Icon icon='hamburguerMenu' /> : <Icon icon='timesDefault' />}\n        </Button>\n      </div>\n\n      <div className={classes.logo}>\n        <NextLink href='/'>\n          <a href='/' style={{ display: 'inline-block' }}>\n            <BoldLogo aria-label='Bold Logo' style={{ height: '2.5rem' }} />\n          </a>\n        </NextLink>\n      </div>\n\n      <div className={classes.search} id='search-wrapper'>\n        <TextInput\n          id='search-input'\n          style={classes.searchInput}\n          type='search'\n          icon='zoomOutline'\n          iconPosition='left'\n          placeholder={t('search-input-placeholder')}\n        />\n      </div>\n\n      <div>\n        <Tooltip text={theme === lightTheme ? t('switch-to-dark') : t('switch-to-light')}>\n          <Button skin='ghost' size='small' onClick={switchTheme} aria-label={'Switch theme'}>\n            <Icon icon='lightbulbFilled' />\n          </Button>\n        </Tooltip>\n      </div>\n    </header>\n  )\n}\n\nexport const APP_HEADER_HEIGHT = 76\n\nconst createStyles = (theme: Theme) => ({\n  header: {\n    background: theme.pallete.surface.main,\n    padding: '1rem 2rem',\n    boxShadow: theme.shadows.outer[60],\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    zIndex: 20,\n    position: 'fixed',\n    width: '100%',\n  } as React.CSSProperties,\n  menuIcon: {\n    display: 'none',\n\n    [theme.breakpoints.down('md')]: {\n      display: 'block',\n    },\n  },\n  logo: {\n    borderRight: `1px solid ${theme.pallete.divider}`,\n    width: `calc(${SIDE_NAV_WIDTH}px - 2rem)`,\n    padding: '0 1rem 0 2.75rem',\n\n    [theme.breakpoints.down('md')]: {\n      borderRight: 'none',\n      width: 'auto',\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  } as React.CSSProperties,\n  searchInput: {\n    border: 'none',\n    '~ span': {\n      background: theme.pallete.surface.main,\n    },\n    '&::-webkit-search-decoration': {\n      WebkitAppearance: 'none',\n    } as React.CSSProperties,\n  } as React.CSSProperties,\n  search: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none',\n    },\n\n    flex: 1,\n    padding: '0 1rem',\n    position: 'relative',\n\n    '.algolia-autocomplete [class^=\"ds-dataset\"]': {\n      background: theme.pallete.surface.main,\n      borderColor: theme.pallete.divider,\n      '&::before': {\n        background: theme.pallete.surface.main,\n      },\n    },\n\n    '.algolia-autocomplete': {\n      left: '1rem !important',\n      top: '0.5rem',\n    },\n\n    /* Main dropdown wrapper */\n    '.algolia-autocomplete .ds-dropdown-menu': {\n      fontSize: '1em',\n      fontWeight: 'normal',\n      '&::before': {\n        background: theme.pallete.surface.main,\n      },\n    },\n\n    /* Link element */\n    '.algolia-autocomplete .algolia-docsearch-suggestion': {\n      fontWeight: 'normal',\n      textDecoration: 'none',\n      background: 'transparent',\n    },\n\n    /* Main category (eg. Getting Started) */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--category-header': {\n      fontWeight: 'bold',\n      color: theme.pallete.text.main,\n    },\n\n    /* Category (eg. Downloads) */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--subcategory-column': {},\n\n    '.algolia-autocomplete .algolia-docsearch-suggestion--subcategory-column-text': {\n      color: theme.pallete.text.secondary,\n      fontSize: theme.typography.sizes.text,\n    },\n\n    /* Content */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--content': {},\n\n    /* Title (eg. Bootstrap CDN) */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--title': {\n      color: theme.pallete.text.main,\n      fontSize: theme.typography.sizes.text,\n    },\n\n    /* Description description (eg. Bootstrap currently works...) */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--text': {\n      color: theme.pallete.text.main,\n      fontSize: theme.typography.sizes.text,\n    },\n\n    /* Highlighted text */\n    '.algolia-autocomplete .algolia-docsearch-suggestion--highlight': {\n      color: 'inherit !important',\n      background: `${theme.pallete.highlight} !important`,\n      boxShadow: 'none !important',\n    },\n  } as React.CSSProperties,\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAEA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AADA;AAIA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AAEA;AADA;AASA;AACA;AACA;AACA;AADA;AAHA;AASA;AACA;AAFA;AAOA;AACA;AACA;AACA;AADA;AAHA;AAUA;AACA;AACA;AAHA;AAQA;AACA;AAFA;AASA;AACA;AAFA;AAUA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AACA;AACA;AAHA;AA5GA;AAAA;;;;A","sourceRoot":""}