{"version":3,"file":"static/webpack/static/development/pages/_app.js.82ddc6bf3363e8e0ed9f.hot-update.js","sources":["webpack:///./components/useThemeSwitch.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport ReactGA from 'react-ga'\n\nimport { darkTheme, lightTheme, Theme } from '../../lib'\n\nexport const useThemeSwitch = (): [Theme, () => Theme] => {\n  const [currentTheme, setCurrentTheme] = useState<Theme>(lightTheme)\n\n  useEffect(() => {\n    if (localStorage) {\n      const loadedTheme = loadTheme()\n      setCurrentTheme(loadedTheme)\n    }\n  }, [])\n\n  useEffect(() => {\n    const theme = currentTheme === lightTheme ? 'light' : 'dark'\n    localStorage.setItem('currentTheme', theme)\n\n    ReactGA.event({\n      category: 'Theme',\n      action: `Switched to ${theme} theme`,\n    })\n  }, [currentTheme])\n\n  const toggleTheme = () => {\n    if (currentTheme === lightTheme) {\n      setCurrentTheme(darkTheme)\n\n      return darkTheme\n    } else {\n      setCurrentTheme(lightTheme)\n\n      return lightTheme\n    }\n  }\n\n  return [currentTheme, toggleTheme]\n}\n\nconst loadTheme = () => {\n  if (localStorage.getItem('currentTheme') !== undefined) {\n    return localStorage.getItem('currentTheme') === 'dark' ? darkTheme : lightTheme\n  }\n\n  const loadedTheme = Math.random() < 0.5 ? darkTheme : lightTheme\n  localStorage.setItem('currentTheme', 'light')\n  return loadedTheme\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}