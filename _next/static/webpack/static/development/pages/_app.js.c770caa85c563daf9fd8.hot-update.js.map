{"version":3,"file":"static/webpack/static/development/pages/_app.js.c770caa85c563daf9fd8.hot-update.js","sources":["webpack:///./components/mdx/index.tsx"],"sourcesContent":["import { CSSProperties, useEffect, useState } from 'react'\n\nimport { darkTheme, Heading, Link as BoldLink, Text, Theme, useStyles } from '../../../lib'\n\nexport function Paragraph(props: any) {\n  const { classes } = useStyles(createStyles)\n  return <Text component='p' style={classes.paragraph} {...props} />\n}\n\nexport function createHeading(level: number) {\n  return (props: any) => {\n    const { classes } = useStyles(createStyles)\n    return <Heading level={level} style={classes.heading} {...props} />\n  }\n}\n\nexport function Link(props: any) {\n  const { classes } = useStyles(createStyles)\n  return <BoldLink style={classes.link} {...props} />\n}\n\nexport function Image(props: any) {\n  const { theme, classes } = useStyles(createStyles)\n\n  const [currentSource, setCurrentSource] = useState(props.src)\n  useEffect(() => {\n    const [, path, filename] = /(.*)\\/(.*\\..*)$/.exec(props.src)\n    const darkSource = `${path}/dark-${filename}`\n    setCurrentSource(theme === darkTheme ? darkSource : props.src)\n  }, [theme, props])\n\n  const handleError = () => {\n    setCurrentSource(props.src)\n  }\n\n  return <img {...props} src={currentSource} onError={handleError} className={classes.image} />\n}\n\nexport function UnorderedList(props: any) {\n  const { classes } = useStyles(createStyles)\n  return <ul className={classes.list} {...props} />\n}\n\nexport function OrderedList(props: any) {\n  const { classes } = useStyles(createStyles)\n  return <ol className={classes.list} {...props} />\n}\n\nexport function Blockquote(props: any) {\n  const { classes } = useStyles(createStyles)\n  return <blockquote className={classes.blockquote} {...props} />\n}\n\nexport function Table(props: any) {\n  const { classes } = useStyles(createStyles)\n  return <table className={classes.table} {...props} />\n}\n\nexport function Pre(props: any) {\n  const { classes } = useStyles(createStyles)\n  return <pre className={classes.pre} {...props} />\n}\n\nexport function Code(props: any) {\n  const { classes } = useStyles(createStyles)\n  return <code className={classes.code} {...props} />\n}\n\nconst createStyles = (theme: Theme) => ({\n  paragraph: {\n    fontSize: '1rem',\n    marginBottom: '2rem',\n  } as CSSProperties,\n  link: {\n    fontSize: '1rem',\n  } as CSSProperties,\n  heading: {\n    marginBottom: '2rem',\n  } as CSSProperties,\n  list: {\n    fontSize: '1rem',\n    margin: '0 0 2rem 0',\n  } as CSSProperties,\n  image: {\n    maxWidth: '100%',\n    marginBottom: '2rem',\n  } as CSSProperties,\n  blockquote: {\n    position: 'relative',\n    p: {\n      color: theme.pallete.primary.main,\n      fontStyle: 'italic',\n      fontSize: '1.25rem',\n    },\n    marginLeft: '7rem',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      left: '-6rem',\n      top: '0.75rem',\n      width: 78,\n      height: 2,\n      borderTop: `2px solid ${theme.pallete.divider}`,\n    },\n  } as CSSProperties,\n  table: {\n    fontSize: '1rem',\n    borderCollapse: 'collapse',\n    width: '100%',\n    marginBottom: '2rem',\n\n    'td, th': {\n      borderBottom: `1px solid ${theme.pallete.divider}`,\n      textAlign: 'left',\n      padding: '1rem 0',\n      '&:not(:last-child)': {\n        paddingRight: '2rem',\n      },\n    },\n  } as CSSProperties,\n  code: {\n    overflow: 'auto',\n    '&:not(.hljs)': {\n      padding: '0.125rem 0.25rem',\n      borderRadius: 3,\n      background: theme.pallete.surface.background,\n    },\n  } as CSSProperties,\n  pre: {\n    marginBottom: '2rem',\n    code: {\n      fontSize: theme.typography.sizes.text,\n      borderRadius: 4,\n      padding: '0.5rem 1rem',\n    },\n  } as CSSProperties,\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AARA;AAkBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AA5DA;AAAA;;;;A","sourceRoot":""}